/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juegodepreguntas;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Albeiro
 */
public class FinDelJuego extends javax.swing.JFrame {

    DefaultListModel<String> modelo = new DefaultListModel<>();

    /**
     * Creates new form FinDelJuego
     */
    public FinDelJuego(int puntaje) {

        initComponents();
        jLabel3.setText("" + puntaje);
        CargarHistorico();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre Jugador");

        jLabel2.setText("Premio");

        jLabel3.setText("jLabel3");

        jButton1.setText("Guardar Datos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder("Historico Jugadores"));
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(120, 120, 120)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GuardarDatos();
        CargarHistorico();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinDelJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinDelJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinDelJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinDelJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
 /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FinDelJuego().setVisible(true);
            }
        });*/
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void GuardarDatos() {
        try {

            String rutaArchivo = getDirectorioExportacion();
            InputStream inp = new FileInputStream(rutaArchivo);

            XSSFWorkbook worbook = new XSSFWorkbook(inp);
            XSSFSheet sheet = worbook.getSheet("Hoja1");
            Map<String, Object[]> studentData = new TreeMap<String, Object[]>();
            studentData.put("1", new Object[]{jTextField1.getText(), jLabel3.getText()});
            Set<String> keyid = studentData.keySet();
            XSSFRow row;

            int rowid = obtenerPosicionActual();

            for (String key : keyid) {

                row = sheet.createRow(rowid++);
                Object[] objectArr = studentData.get(key);
                int cellid = 0;

                for (Object obj : objectArr) {
                    Cell cell = row.createCell(cellid++);
                    cell.setCellValue((String) obj);
                }
            }

            FileOutputStream out = new FileOutputStream(
                    new File(rutaArchivo));

            worbook.write(out);
            out.close();

        } catch (IOException | EncryptedDocumentException ex) {
            Logger.getLogger(FinDelJuego.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void CargarHistorico() {
        modelo.removeAllElements();
        jList1.setModel(modelo);
        try {
            int sh = 1;
            System.out.println(getDirectorioExportacion());
            String rutaArchivo = getDirectorioExportacion();
            InputStream inp = new FileInputStream(rutaArchivo);

            XSSFWorkbook worbook = new XSSFWorkbook(inp);
            XSSFSheet sheet = worbook.getSheet("Hoja1");
            Map<String, Object[]> studentData = new TreeMap<String, Object[]>();
            studentData.put("1", new Object[]{jTextField1.getText(), jLabel3.getText()});
            Set<String> keyid = studentData.keySet();
            XSSFRow row = sheet.getRow(sh);
            ; //En qué fila empezar ya dependerá también de si tenemos, por ejemplo, el título de cada columna en la primera fila
            while (row != null) {
                Cell cell = row.getCell(0);
                String value = cell.getStringCellValue();
                System.out.println("Valor de la celda es " + value);
                Cell cell2 = row.getCell(1);
                String value2 = cell2.getStringCellValue();
                modelo.addElement(value + " " + value2);
                sh++;
                row = sheet.getRow(sh);

            }

            int rowid = 1;

        } catch (FileNotFoundException ex) {
            Logger.getLogger(FinDelJuego.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FinDelJuego.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public  int obtenerPosicionActual() {
        int sh = 0;
        try {

            String rutaArchivo = this.getDirectorioExportacion()  ;
            InputStream inp = new FileInputStream(rutaArchivo);

            XSSFWorkbook worbook = new XSSFWorkbook(inp);
            XSSFSheet sheet = worbook.getSheet("Hoja1");

            XSSFRow row = sheet.getRow(sh);

            while (row != null) {

                sh++;
                row = sheet.getRow(sh);

            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(FinDelJuego.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FinDelJuego.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sh;
    }
    public  String getDirectorioExportacion() {
        String ruta = "";
        return ruta = System.getProperties().getProperty("user.dir") + this.getBarra()+"BD\\BDJuegoP.xls";
    }

    private static String getBarra() {
        String ruta = "";
        if (System.getProperty("os.name").substring(0, 3).equals("Win")) {
            ruta = "\\";
        } else {
            ruta = "/";
        }
        return ruta;
    }
}
